Executing (default): SHOW INDEX FROM `receipts`
[0] IncomingMessage {
[0]   _readableState:
[0]    ReadableState {
[0]      objectMode: false,
[0]      highWaterMark: 16384,
[0]      buffer: BufferList { head: null, tail: null, length: 0 },
[0]      length: 0,
[0]      pipes: null,
[0]      pipesCount: 0,
[0]      flowing: null,
[0]      ended: false,
[0]      endEmitted: false,
[0]      reading: false,
[0]      sync: true,
[0]      needReadable: false,
[0]      emittedReadable: false,
[0]      readableListening: false,
[0]      resumeScheduled: false,
[0]      paused: true,
[0]      emitClose: true,
[0]      autoDestroy: false,
[0]      destroyed: false,
[0]      defaultEncoding: 'utf8',
[0]      awaitDrain: 0,
[0]      readingMore: true,
[0]      decoder: null,
[0]      encoding: null },
[0]   readable: true,
[0]   _events:
[0]    [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
[0]   _eventsCount: 1,
[0]   _maxListeners: undefined,
[0]   socket:
[0]    Socket {
[0]      connecting: false,
[0]      _hadError: false,
[0]      _handle:
[0]       TCP {
[0]         reading: true,
[0]         onread: [Function: onStreamRead],
[0]         onconnection: null,
[0]         _consumed: true,
[0]         [Symbol(owner)]: [Circular] },
[0]      _parent: null,
[0]      _host: null,
[0]      _readableState:
[0]       ReadableState {
[0]         objectMode: false,
[0]         highWaterMark: 16384,
[0]         buffer: BufferList { head: null, tail: null, length: 0 },
[0]         length: 0,
[0]         pipes: null,
[0]         pipesCount: 0,
[0]         flowing: true,
[0]         ended: false,
[0]         endEmitted: false,
[0]         reading: true,
[0]         sync: false,
[0]         needReadable: true,
[0]         emittedReadable: false,
[0]         readableListening: false,
[0]         resumeScheduled: false,
[0]         paused: false,
[0]         emitClose: false,
[0]         autoDestroy: false,
[0]         destroyed: false,
[0]         defaultEncoding: 'utf8',
[0]         awaitDrain: 0,
[0]         readingMore: false,
[0]         decoder: null,
[0]         encoding: null },
[0]      readable: true,
[0]      _events:
[0]       [Object: null prototype] {
[0]         end: [Array],
[0]         drain: [Array],
[0]         timeout: [Function: socketOnTimeout],
[0]         data: [Function: bound socketOnData],
[0]         error: [Array],
[0]         close: [Array],
[0]         resume: [Function: onSocketResume],
[0]         pause: [Function: onSocketPause] },
[0]      _eventsCount: 8,
[0]      _maxListeners: undefined,
[0]      _writableState:
[0]       WritableState {
[0]         objectMode: false,
[0]         highWaterMark: 16384,
[0]         finalCalled: false,
[0]         needDrain: false,
[0]         ending: false,
[0]         ended: false,
[0]         finished: false,
[0]         destroyed: false,
[0]         decodeStrings: false,
[0]         defaultEncoding: 'utf8',
[0]         length: 0,
[0]         writing: false,
[0]         corked: 0,
[0]         sync: true,
[0]         bufferProcessing: false,
[0]         onwrite: [Function: bound onwrite],
[0]         writecb: null,
[0]         writelen: 0,
[0]         bufferedRequest: null,
[0]         lastBufferedRequest: null,
[0]         pendingcb: 0,
[0]         prefinished: false,
[0]         errorEmitted: false,
[0]         emitClose: false,
[0]         autoDestroy: false,
[0]         bufferedRequestCount: 0,
[0]         corkedRequestsFree: [Object] },
[0]      writable: true,
[0]      allowHalfOpen: true,
[0]      _sockname: null,
[0]      _pendingData: null,
[0]      _pendingEncoding: '',
[0]      server:
[0]       Server {
[0]         insecureHTTPParser: undefined,
[0]         _events: [Object],
[0]         _eventsCount: 4,
[0]         _maxListeners: undefined,
[0]         _connections: 2,
[0]         _handle: [TCP],
[0]         _usingWorkers: false,
[0]         _workers: [],
[0]         _unref: false,
[0]         allowHalfOpen: true,
[0]         pauseOnConnect: false,
[0]         httpAllowHalfOpen: false,
[0]         timeout: 120000,
[0]         keepAliveTimeout: 5000,
[0]         maxHeadersCount: null,
[0]         headersTimeout: 40000,
[0]         _connectionKey: '6::::8003',
[0]         [Symbol(IncomingMessage)]: [Function],
[0]         [Symbol(ServerResponse)]: [Function],
[0]         [Symbol(asyncId)]: 128 },
[0]      _server:
[0]       Server {
[0]         insecureHTTPParser: undefined,
[0]         _events: [Object],
[0]         _eventsCount: 4,
[0]         _maxListeners: undefined,
[0]         _connections: 2,
[0]         _handle: [TCP],
[0]         _usingWorkers: false,
[0]         _workers: [],
[0]         _unref: false,
[0]         allowHalfOpen: true,
[0]         pauseOnConnect: false,
[0]         httpAllowHalfOpen: false,
[0]         timeout: 120000,
[0]         keepAliveTimeout: 5000,
[0]         maxHeadersCount: null,
[0]         headersTimeout: 40000,
[0]         _connectionKey: '6::::8003',
[0]         [Symbol(IncomingMessage)]: [Function],
[0]         [Symbol(ServerResponse)]: [Function],
[0]         [Symbol(asyncId)]: 128 },
[0]      timeout: 120000,
[0]      parser:
[0]       HTTPParser {
[0]         '0': [Function: parserOnHeaders],
[0]         '1': [Function: parserOnHeadersComplete],
[0]         '2': [Function: parserOnBody],
[0]         '3': [Function: parserOnMessageComplete],
[0]         '4': [Function: bound onParserExecute],
[0]         _headers: [],
[0]         _url: '',
[0]         socket: [Circular],
[0]         incoming: [Circular],
[0]         outgoing: null,
[0]         maxHeaderPairs: 2000,
[0]         _consumed: true,
[0]         onIncoming: [Function: bound parserOnIncoming],
[0]         parsingHeadersStart: 0,
[0]         [Symbol(isReused)]: false },
[0]      on: [Function: socketOnWrap],
[0]      _paused: false,
[0]      _httpMessage:
[0]       ServerResponse {
[0]         _events: [Object],
[0]         _eventsCount: 2,
[0]         _maxListeners: undefined,
[0]         output: [],
[0]         outputEncodings: [],
[0]         outputCallbacks: [],
[0]         outputSize: 0,
[0]         writable: true,
[0]         _last: false,
[0]         chunkedEncoding: false,
[0]         shouldKeepAlive: true,
[0]         useChunkedEncodingByDefault: true,
[0]         sendDate: true,
[0]         _removedConnection: false,
[0]         _removedContLen: false,
[0]         _removedTE: false,
[0]         _contentLength: null,
[0]         _hasBody: true,
[0]         _trailer: '',
[0]         finished: false,
[0]         _headerSent: false,
[0]         socket: [Circular],
[0]         connection: [Circular],
[0]         _header: null,
[0]         _onPendingData: [Function: bound updateOutgoingData],
[0]         _sent100: false,
[0]         _expect_continue: false,
[0]         req: [Circular],
[0]         locals: [Object: null prototype] {},
[0]         _startAt: undefined,
[0]         _startTime: undefined,
[0]         writeHead: [Function: writeHead],
[0]         __onFinished: [Function],
[0]         [Symbol(isCorked)]: false,
[0]         [Symbol(outHeadersKey)]: [Object] },
[0]      _peername: { address: '::1', family: 'IPv6', port: 42260 },
[0]      [Symbol(asyncId)]: 141,
[0]      [Symbol(lastWriteQueueSize)]: 0,
[0]      [Symbol(timeout)]:
[0]       Timeout {
[0]         _called: false,
[0]         _idleTimeout: 120000,
[0]         _idlePrev: [Timeout],
[0]         _idleNext: [TimersList],
[0]         _idleStart: 5034,
[0]         _onTimeout: [Function: bound ],
[0]         _timerArgs: undefined,
[0]         _repeat: null,
[0]         _destroyed: false,
[0]         [Symbol(unrefed)]: true,
[0]         [Symbol(asyncId)]: 142,
[0]         [Symbol(triggerId)]: 141 },
[0]      [Symbol(kBytesRead)]: 0,
[0]      [Symbol(kBytesWritten)]: 0 },
[0]   connection:
[0]    Socket {
[0]      connecting: false,
[0]      _hadError: false,
[0]      _handle:
[0]       TCP {
[0]         reading: true,
[0]         onread: [Function: onStreamRead],
[0]         onconnection: null,
[0]         _consumed: true,
[0]         [Symbol(owner)]: [Circular] },
[0]      _parent: null,
[0]      _host: null,
[0]      _readableState:
[0]       ReadableState {
[0]         objectMode: false,
[0]         highWaterMark: 16384,
[0]         buffer: BufferList { head: null, tail: null, length: 0 },
[0]         length: 0,
[0]         pipes: null,
[0]         pipesCount: 0,
[0]         flowing: true,
[0]         ended: false,
[0]         endEmitted: false,
[0]         reading: true,
[0]         sync: false,
[0]         needReadable: true,
[0]         emittedReadable: false,
[0]         readableListening: false,
[0]         resumeScheduled: false,
[0]         paused: false,
[0]         emitClose: false,
[0]         autoDestroy: false,
[0]         destroyed: false,
[0]         defaultEncoding: 'utf8',
[0]         awaitDrain: 0,
[0]         readingMore: false,
[0]         decoder: null,
[0]         encoding: null },
[0]      readable: true,
[0]      _events:
[0]       [Object: null prototype] {
[0]         end: [Array],
[0]         drain: [Array],
[0]         timeout: [Function: socketOnTimeout],
[0]         data: [Function: bound socketOnData],
[0]         error: [Array],
[0]         close: [Array],
[0]         resume: [Function: onSocketResume],
[0]         pause: [Function: onSocketPause] },
[0]      _eventsCount: 8,
[0]      _maxListeners: undefined,
[0]      _writableState:
[0]       WritableState {
[0]         objectMode: false,
[0]         highWaterMark: 16384,
[0]         finalCalled: false,
[0]         needDrain: false,
[0]         ending: false,
[0]         ended: false,
[0]         finished: false,
[0]         destroyed: false,
[0]         decodeStrings: false,
[0]         defaultEncoding: 'utf8',
[0]         length: 0,
[0]         writing: false,
[0]         corked: 0,
[0]         sync: true,
[0]         bufferProcessing: false,
[0]         onwrite: [Function: bound onwrite],
[0]         writecb: null,
[0]         writelen: 0,
[0]         bufferedRequest: null,
[0]         lastBufferedRequest: null,
[0]         pendingcb: 0,
[0]         prefinished: false,
[0]         errorEmitted: false,
[0]         emitClose: false,
[0]         autoDestroy: false,
[0]         bufferedRequestCount: 0,
[0]         corkedRequestsFree: [Object] },
[0]      writable: true,
[0]      allowHalfOpen: true,
[0]      _sockname: null,
[0]      _pendingData: null,
[0]      _pendingEncoding: '',
[0]      server:
[0]       Server {
[0]         insecureHTTPParser: undefined,
[0]         _events: [Object],
[0]         _eventsCount: 4,
[0]         _maxListeners: undefined,
[0]         _connections: 2,
[0]         _handle: [TCP],
[0]         _usingWorkers: false,
[0]         _workers: [],
[0]         _unref: false,
[0]         allowHalfOpen: true,
[0]         pauseOnConnect: false,
[0]         httpAllowHalfOpen: false,
[0]         timeout: 120000,
[0]         keepAliveTimeout: 5000,
[0]         maxHeadersCount: null,
[0]         headersTimeout: 40000,
[0]         _connectionKey: '6::::8003',
[0]         [Symbol(IncomingMessage)]: [Function],
[0]         [Symbol(ServerResponse)]: [Function],
[0]         [Symbol(asyncId)]: 128 },
[0]      _server:
[0]       Server {
[0]         insecureHTTPParser: undefined,
[0]         _events: [Object],
[0]         _eventsCount: 4,
[0]         _maxListeners: undefined,
[0]         _connections: 2,
[0]         _handle: [TCP],
[0]         _usingWorkers: false,
[0]         _workers: [],
[0]         _unref: false,
[0]         allowHalfOpen: true,
[0]         pauseOnConnect: false,
[0]         httpAllowHalfOpen: false,
[0]         timeout: 120000,
[0]         keepAliveTimeout: 5000,
[0]         maxHeadersCount: null,
[0]         headersTimeout: 40000,
[0]         _connectionKey: '6::::8003',
[0]         [Symbol(IncomingMessage)]: [Function],
[0]         [Symbol(ServerResponse)]: [Function],
[0]         [Symbol(asyncId)]: 128 },
[0]      timeout: 120000,
[0]      parser:
[0]       HTTPParser {
[0]         '0': [Function: parserOnHeaders],
[0]         '1': [Function: parserOnHeadersComplete],
[0]         '2': [Function: parserOnBody],
[0]         '3': [Function: parserOnMessageComplete],
[0]         '4': [Function: bound onParserExecute],
[0]         _headers: [],
[0]         _url: '',
[0]         socket: [Circular],
[0]         incoming: [Circular],
[0]         outgoing: null,
[0]         maxHeaderPairs: 2000,
[0]         _consumed: true,
[0]         onIncoming: [Function: bound parserOnIncoming],
[0]         parsingHeadersStart: 0,
[0]         [Symbol(isReused)]: false },
[0]      on: [Function: socketOnWrap],
[0]      _paused: false,
[0]      _httpMessage:
[0]       ServerResponse {
[0]         _events: [Object],
[0]         _eventsCount: 2,
[0]         _maxListeners: undefined,
[0]         output: [],
[0]         outputEncodings: [],
[0]         outputCallbacks: [],
[0]         outputSize: 0,
[0]         writable: true,
[0]         _last: false,
[0]         chunkedEncoding: false,
[0]         shouldKeepAlive: true,
[0]         useChunkedEncodingByDefault: true,
[0]         sendDate: true,
[0]         _removedConnection: false,
[0]         _removedContLen: false,
[0]         _removedTE: false,
[0]         _contentLength: null,
[0]         _hasBody: true,
[0]         _trailer: '',
[0]         finished: false,
[0]         _headerSent: false,
[0]         socket: [Circular],
[0]         connection: [Circular],
[0]         _header: null,
[0]         _onPendingData: [Function: bound updateOutgoingData],
[0]         _sent100: false,
[0]         _expect_continue: false,
[0]         req: [Circular],
[0]         locals: [Object: null prototype] {},
[0]         _startAt: undefined,
[0]         _startTime: undefined,
[0]         writeHead: [Function: writeHead],
[0]         __onFinished: [Function],
[0]         [Symbol(isCorked)]: false,
[0]         [Symbol(outHeadersKey)]: [Object] },
[0]      _peername: { address: '::1', family: 'IPv6', port: 42260 },
[0]      [Symbol(asyncId)]: 141,
[0]      [Symbol(lastWriteQueueSize)]: 0,
[0]      [Symbol(timeout)]:
[0]       Timeout {
[0]         _called: false,
[0]         _idleTimeout: 120000,
[0]         _idlePrev: [Timeout],
[0]         _idleNext: [TimersList],
[0]         _idleStart: 5034,
[0]         _onTimeout: [Function: bound ],
[0]         _timerArgs: undefined,
[0]         _repeat: null,
[0]         _destroyed: false,
[0]         [Symbol(unrefed)]: true,
[0]         [Symbol(asyncId)]: 142,
[0]         [Symbol(triggerId)]: 141 },
[0]      [Symbol(kBytesRead)]: 0,
[0]      [Symbol(kBytesWritten)]: 0 },
[0]   httpVersionMajor: 1,
[0]   httpVersionMinor: 1,
[0]   httpVersion: '1.1',
[0]   complete: false,
[0]   headers:
[0]    { 'user-agent': 'PostmanRuntime/7.26.8',
[0]      accept: '*/*',
[0]      'postman-token': 'e7f0f85c-d54a-4b41-b16d-5afcbb93fb10',
[0]      host: 'localhost:8003',
[0]      'accept-encoding': 'gzip, deflate, br',
[0]      connection: 'keep-alive',
[0]      'content-type':
[0]       'multipart/form-data; boundary=--------------------------253711613993424291870241',
[0]      'content-length': '45824' },
[0]   rawHeaders:
[0]    [ 'User-Agent',
[0]      'PostmanRuntime/7.26.8',
[0]      'Accept',
[0]      '*/*',
[0]      'Postman-Token',
[0]      'e7f0f85c-d54a-4b41-b16d-5afcbb93fb10',
[0]      'Host',
[0]      'localhost:8003',
[0]      'Accept-Encoding',
[0]      'gzip, deflate, br',
[0]      'Connection',
[0]      'keep-alive',
[0]      'Content-Type',
[0]      'multipart/form-data; boundary=--------------------------253711613993424291870241',
[0]      'Content-Length',
[0]      '45824' ],
[0]   trailers: {},
[0]   rawTrailers: [],
[0]   aborted: false,
[0]   upgrade: false,
[0]   url: '/avatar',
[0]   method: 'POST',
[0]   statusCode: null,
[0]   statusMessage: null,
[0]   client:
[0]    Socket {
[0]      connecting: false,
[0]      _hadError: false,
[0]      _handle:
[0]       TCP {
[0]         reading: true,
[0]         onread: [Function: onStreamRead],
[0]         onconnection: null,
[0]         _consumed: true,
[0]         [Symbol(owner)]: [Circular] },
[0]      _parent: null,
[0]      _host: null,
[0]      _readableState:
[0]       ReadableState {
[0]         objectMode: false,
[0]         highWaterMark: 16384,
[0]         buffer: BufferList { head: null, tail: null, length: 0 },
[0]         length: 0,
[0]         pipes: null,
[0]         pipesCount: 0,
[0]         flowing: true,
[0]         ended: false,
[0]         endEmitted: false,
[0]         reading: true,
[0]         sync: false,
[0]         needReadable: true,
[0]         emittedReadable: false,
[0]         readableListening: false,
[0]         resumeScheduled: false,
[0]         paused: false,
[0]         emitClose: false,
[0]         autoDestroy: false,
[0]         destroyed: false,
[0]         defaultEncoding: 'utf8',
[0]         awaitDrain: 0,
[0]         readingMore: false,
[0]         decoder: null,
[0]         encoding: null },
[0]      readable: true,
[0]      _events:
[0]       [Object: null prototype] {
[0]         end: [Array],
[0]         drain: [Array],
[0]         timeout: [Function: socketOnTimeout],
[0]         data: [Function: bound socketOnData],
[0]         error: [Array],
[0]         close: [Array],
[0]         resume: [Function: onSocketResume],
[0]         pause: [Function: onSocketPause] },
[0]      _eventsCount: 8,
[0]      _maxListeners: undefined,
[0]      _writableState:
[0]       WritableState {
[0]         objectMode: false,
[0]         highWaterMark: 16384,
[0]         finalCalled: false,
[0]         needDrain: false,
[0]         ending: false,
[0]         ended: false,
[0]         finished: false,
[0]         destroyed: false,
[0]         decodeStrings: false,
[0]         defaultEncoding: 'utf8',
[0]         length: 0,
[0]         writing: false,
[0]         corked: 0,
[0]         sync: true,
[0]         bufferProcessing: false,
[0]         onwrite: [Function: bound onwrite],
[0]         writecb: null,
[0]         writelen: 0,
[0]         bufferedRequest: null,
[0]         lastBufferedRequest: null,
[0]         pendingcb: 0,
[0]         prefinished: false,
[0]         errorEmitted: false,
[0]         emitClose: false,
[0]         autoDestroy: false,
[0]         bufferedRequestCount: 0,
[0]         corkedRequestsFree: [Object] },
[0]      writable: true,
[0]      allowHalfOpen: true,
[0]      _sockname: null,
[0]      _pendingData: null,
[0]      _pendingEncoding: '',
[0]      server:
[0]       Server {
[0]         insecureHTTPParser: undefined,
[0]         _events: [Object],
[0]         _eventsCount: 4,
[0]         _maxListeners: undefined,
[0]         _connections: 2,
[0]         _handle: [TCP],
[0]         _usingWorkers: false,
[0]         _workers: [],
[0]         _unref: false,
[0]         allowHalfOpen: true,
[0]         pauseOnConnect: false,
[0]         httpAllowHalfOpen: false,
[0]         timeout: 120000,
[0]         keepAliveTimeout: 5000,
[0]         maxHeadersCount: null,
[0]         headersTimeout: 40000,
[0]         _connectionKey: '6::::8003',
[0]         [Symbol(IncomingMessage)]: [Function],
[0]         [Symbol(ServerResponse)]: [Function],
[0]         [Symbol(asyncId)]: 128 },
[0]      _server:
[0]       Server {
[0]         insecureHTTPParser: undefined,
[0]         _events: [Object],
[0]         _eventsCount: 4,
[0]         _maxListeners: undefined,
[0]         _connections: 2,
[0]         _handle: [TCP],
[0]         _usingWorkers: false,
[0]         _workers: [],
[0]         _unref: false,
[0]         allowHalfOpen: true,
[0]         pauseOnConnect: false,
[0]         httpAllowHalfOpen: false,
[0]         timeout: 120000,
[0]         keepAliveTimeout: 5000,
[0]         maxHeadersCount: null,
[0]         headersTimeout: 40000,
[0]         _connectionKey: '6::::8003',
[0]         [Symbol(IncomingMessage)]: [Function],
[0]         [Symbol(ServerResponse)]: [Function],
[0]         [Symbol(asyncId)]: 128 },
[0]      timeout: 120000,
[0]      parser:
[0]       HTTPParser {
[0]         '0': [Function: parserOnHeaders],
[0]         '1': [Function: parserOnHeadersComplete],
[0]         '2': [Function: parserOnBody],
[0]         '3': [Function: parserOnMessageComplete],
[0]         '4': [Function: bound onParserExecute],
[0]         _headers: [],
[0]         _url: '',
[0]         socket: [Circular],
[0]         incoming: [Circular],
[0]         outgoing: null,
[0]         maxHeaderPairs: 2000,
[0]         _consumed: true,
[0]         onIncoming: [Function: bound parserOnIncoming],
[0]         parsingHeadersStart: 0,
[0]         [Symbol(isReused)]: false },
[0]      on: [Function: socketOnWrap],
[0]      _paused: false,
[0]      _httpMessage:
[0]       ServerResponse {
[0]         _events: [Object],
[0]         _eventsCount: 2,
[0]         _maxListeners: undefined,
[0]         output: [],
[0]         outputEncodings: [],
[0]         outputCallbacks: [],
[0]         outputSize: 0,
[0]         writable: true,
[0]         _last: false,
[0]         chunkedEncoding: false,
[0]         shouldKeepAlive: true,
[0]         useChunkedEncodingByDefault: true,
[0]         sendDate: true,
[0]         _removedConnection: false,
[0]         _removedContLen: false,
[0]         _removedTE: false,
[0]         _contentLength: null,
[0]         _hasBody: true,
[0]         _trailer: '',
[0]         finished: false,
[0]         _headerSent: false,
[0]         socket: [Circular],
[0]         connection: [Circular],
[0]         _header: null,
[0]         _onPendingData: [Function: bound updateOutgoingData],
[0]         _sent100: false,
[0]         _expect_continue: false,
[0]         req: [Circular],
[0]         locals: [Object: null prototype] {},
[0]         _startAt: undefined,
[0]         _startTime: undefined,
[0]         writeHead: [Function: writeHead],
[0]         __onFinished: [Function],
[0]         [Symbol(isCorked)]: false,
[0]         [Symbol(outHeadersKey)]: [Object] },
[0]      _peername: { address: '::1', family: 'IPv6', port: 42260 },
[0]      [Symbol(asyncId)]: 141,
[0]      [Symbol(lastWriteQueueSize)]: 0,
[0]      [Symbol(timeout)]:
[0]       Timeout {
[0]         _called: false,
[0]         _idleTimeout: 120000,
[0]         _idlePrev: [Timeout],
[0]         _idleNext: [TimersList],
[0]         _idleStart: 5034,
[0]         _onTimeout: [Function: bound ],
[0]         _timerArgs: undefined,
[0]         _repeat: null,
[0]         _destroyed: false,
[0]         [Symbol(unrefed)]: true,
[0]         [Symbol(asyncId)]: 142,
[0]         [Symbol(triggerId)]: 141 },
[0]      [Symbol(kBytesRead)]: 0,
[0]      [Symbol(kBytesWritten)]: 0 },
[0]   _consuming: false,
[0]   _dumped: false,
[0]   next: [Function: next],
[0]   baseUrl: '/customers',
[0]   originalUrl: '/customers/avatar',
[0]   _parsedUrl:
[0]    Url {
[0]      protocol: null,
[0]      slashes: null,
[0]      auth: null,
[0]      host: null,
[0]      port: null,
[0]      hostname: null,
[0]      hash: null,
[0]      search: null,
[0]      query: null,
[0]      pathname: '/avatar',
[0]      path: '/avatar',
[0]      href: '/avatar',
[0]      _raw: '/avatar' },
[0]   params: {},
[0]   query: {},
[0]   res:
[0]    ServerResponse {
[0]      _events:
[0]       [Object: null prototype] { finish: [Array], end: [Function: onevent] },
[0]      _eventsCount: 2,
[0]      _maxListeners: undefined,
[0]      output: [],
[0]      outputEncodings: [],
[0]      outputCallbacks: [],
[0]      outputSize: 0,
[0]      writable: true,
[0]      _last: false,
[0]      chunkedEncoding: false,
[0]      shouldKeepAlive: true,
[0]      useChunkedEncodingByDefault: true,
[0]      sendDate: true,
[0]      _removedConnection: false,
[0]      _removedContLen: false,
[0]      _removedTE: false,
[0]      _contentLength: null,
[0]      _hasBody: true,
[0]      _trailer: '',
[0]      finished: false,
[0]      _headerSent: false,
[0]      socket:
[0]       Socket {
[0]         connecting: false,
[0]         _hadError: false,
[0]         _handle: [TCP],
[0]         _parent: null,
[0]         _host: null,
[0]         _readableState: [ReadableState],
[0]         readable: true,
[0]         _events: [Object],
[0]         _eventsCount: 8,
[0]         _maxListeners: undefined,
[0]         _writableState: [WritableState],
[0]         writable: true,
[0]         allowHalfOpen: true,
[0]         _sockname: null,
[0]         _pendingData: null,
[0]         _pendingEncoding: '',
[0]         server: [Server],
[0]         _server: [Server],
[0]         timeout: 120000,
[0]         parser: [HTTPParser],
[0]         on: [Function: socketOnWrap],
[0]         _paused: false,
[0]         _httpMessage: [Circular],
[0]         _peername: [Object],
[0]         [Symbol(asyncId)]: 141,
[0]         [Symbol(lastWriteQueueSize)]: 0,
[0]         [Symbol(timeout)]:
[0]          Timeout {
[0]            _called: false,
[0]            _idleTimeout: 120000,
[0]            _idlePrev: [Timeout],
[0]            _idleNext: [TimersList],
[0]            _idleStart: 5034,
[0]            _onTimeout: [Function: bound ],
[0]            _timerArgs: undefined,
[0]            _repeat: null,
[0]            _destroyed: false,
[0]            [Symbol(unrefed)]: true,
[0]            [Symbol(asyncId)]: 142,
[0]            [Symbol(triggerId)]: 141 },
[0]         [Symbol(kBytesRead)]: 0,
[0]         [Symbol(kBytesWritten)]: 0 },
[0]      connection:
[0]       Socket {
[0]         connecting: false,
[0]         _hadError: false,
[0]         _handle: [TCP],
[0]         _parent: null,
[0]         _host: null,
[0]         _readableState: [ReadableState],
[0]         readable: true,
[0]         _events: [Object],
[0]         _eventsCount: 8,
[0]         _maxListeners: undefined,
[0]         _writableState: [WritableState],
[0]         writable: true,
[0]         allowHalfOpen: true,
[0]         _sockname: null,
[0]         _pendingData: null,
[0]         _pendingEncoding: '',
[0]         server: [Server],
[0]         _server: [Server],
[0]         timeout: 120000,
[0]         parser: [HTTPParser],
[0]         on: [Function: socketOnWrap],
[0]         _paused: false,
[0]         _httpMessage: [Circular],
[0]         _peername: [Object],
[0]         [Symbol(asyncId)]: 141,
[0]         [Symbol(lastWriteQueueSize)]: 0,
[0]         [Symbol(timeout)]:
[0]          Timeout {
[0]            _called: false,
[0]            _idleTimeout: 120000,
[0]            _idlePrev: [Timeout],
[0]            _idleNext: [TimersList],
[0]            _idleStart: 5034,
[0]            _onTimeout: [Function: bound ],
[0]            _timerArgs: undefined,
[0]            _repeat: null,
[0]            _destroyed: false,
[0]            [Symbol(unrefed)]: true,
[0]            [Symbol(asyncId)]: 142,
[0]            [Symbol(triggerId)]: 141 },
[0]         [Symbol(kBytesRead)]: 0,
[0]         [Symbol(kBytesWritten)]: 0 },
[0]      _header: null,
[0]      _onPendingData: [Function: bound updateOutgoingData],
[0]      _sent100: false,
[0]      _expect_continue: false,
[0]      req: [Circular],
[0]      locals: [Object: null prototype] {},
[0]      _startAt: undefined,
[0]      _startTime: undefined,
[0]      writeHead: [Function: writeHead],
[0]      __onFinished: { [Function: listener] queue: [Array] },
[0]      [Symbol(isCorked)]: false,
[0]      [Symbol(outHeadersKey)]: [Object: null prototype] { 'x-powered-by': [Array] } },
[0]   _startAt: [ 6689, 574393893 ],
[0]   _startTime: 2020-11-10T18:38:41.135Z,
[0]   _remoteAddress: '::1',
[0]   body: {},
[0]   secret: undefined,
[0]   cookies: [Object: null prototype] {},
[0]   signedCookies: [Object: null prototype] {},
[0]   route:
[0]    Route { path: '/avatar', stack: [ [Layer] ], methods: { post: true } } }
[0] POST /customers/avatar 200 44.095 ms - 222